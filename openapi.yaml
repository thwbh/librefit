---
openapi: 3.0.3
info:
  title: librefit API
  version: PREVIEW
servers:
- url: http://localhost:8080
  description: Auto generated value
- url: http://0.0.0.0:8080
  description: Auto generated value
paths:
  /api/composite/dashboard/{date}:
    get:
      tags:
      - Composite Resource
      operationId: getDashboard
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/composite/wizard/result:
    post:
      tags:
      - Composite Resource
      operationId: postWizardResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Wizard"
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/import/bulk:
    post:
      tags:
      - Import Resource
      operationId: postImportBulk
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - fileName
              type: object
              properties:
                fileName:
                  type: string
                config:
                  $ref: "#/components/schemas/ImportConfig"
                file:
                  $ref: "#/components/schemas/FileUpload"
            encoding:
              fileName:
                contentType: text/csv
              file:
                contentType: application/octet-stream
              config:
                contentType: application/json
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/calories/create:
    post:
      tags:
      - Calorie Target Resource
      operationId: createCalorieTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalorieTarget"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalorieTarget"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/calories/delete/{date}/{sequence}:
    delete:
      tags:
      - Calorie Target Resource
      operationId: deleteCalorieTarget
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: sequence
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/calories/last:
    get:
      tags:
      - Calorie Target Resource
      operationId: findLastCalorieTarget
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalorieTarget"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/calories/read/{date}/{sequence}:
    get:
      tags:
      - Calorie Target Resource
      operationId: readCalorieTarget
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: sequence
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalorieTarget"
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/calories/update:
    put:
      tags:
      - Calorie Target Resource
      operationId: updateCalorieTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalorieTarget"
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/weight/create:
    post:
      tags:
      - Weight Target Resource
      operationId: createWeightTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeightTarget"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightTarget"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/weight/delete/{date}/{sequence}:
    delete:
      tags:
      - Weight Target Resource
      operationId: deleteWeightTarget
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: sequence
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/weight/last:
    get:
      tags:
      - Weight Target Resource
      operationId: findLastWeightTarget
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightTarget"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/weight/read/{date}/{sequence}:
    get:
      tags:
      - Weight Target Resource
      operationId: readWeightTarget
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: sequence
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightTarget"
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/target/weight/update:
    put:
      tags:
      - Weight Target Resource
      operationId: updateWeightTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeightTarget"
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/calories/categories/list:
    get:
      tags:
      - Calorie Tracker Resource
      operationId: listFoodCategories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FoodCategory"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/calories/create:
    post:
      tags:
      - Calorie Tracker Resource
      operationId: createCalorieTracker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalorieTracker"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalorieTracker"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/calories/delete/{date}/{sequence}:
    delete:
      tags:
      - Calorie Tracker Resource
      operationId: deleteCalorieTracker
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: sequence
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/calories/list/dates/{dateFrom}/{dateTo}:
    get:
      tags:
      - Calorie Tracker Resource
      operationId: listCalorieTrackerDatesRange
      parameters:
      - name: dateFrom
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: dateTo
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LocalDate"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/calories/list/{dateFrom}/{dateTo}:
    get:
      tags:
      - Calorie Tracker Resource
      operationId: listCalorieTrackerRange
      parameters:
      - name: dateFrom
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: dateTo
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CalorieTracker"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/calories/list/{date}:
    get:
      tags:
      - Calorie Tracker Resource
      operationId: listCalorieTrackerForDate
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CalorieTracker"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/calories/read/{date}/{sequence}:
    get:
      tags:
      - Calorie Tracker Resource
      operationId: readCalorieTracker
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: sequence
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalorieTracker"
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/calories/update:
    put:
      tags:
      - Calorie Tracker Resource
      operationId: updateCalorieTracker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalorieTracker"
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/weight/create:
    post:
      tags:
      - Weight Tracker Resource
      operationId: createWeightTracker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeightTracker"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightTracker"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/weight/delete/{date}/{sequence}:
    delete:
      tags:
      - Weight Tracker Resource
      operationId: deleteWeightTracker
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: sequence
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/weight/last:
    get:
      tags:
      - Weight Tracker Resource
      operationId: findLastWeightTracker
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightTracker"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/weight/list/dates/{dateFrom}/{dateTo}:
    get:
      tags:
      - Weight Tracker Resource
      operationId: listWeightTrackerDatesRange
      parameters:
      - name: dateFrom
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: dateTo
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LocalDate"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/weight/list/{dateFrom}/{dateTo}:
    get:
      tags:
      - Weight Tracker Resource
      operationId: listWeightTrackerRange
      parameters:
      - name: dateFrom
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: dateTo
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WeightTracker"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/weight/list/{date}:
    get:
      tags:
      - Weight Tracker Resource
      operationId: listWeightTracker
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WeightTracker"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/weight/read/{date}/{sequence}:
    get:
      tags:
      - Weight Tracker Resource
      operationId: readWeightTracker
      parameters:
      - name: date
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: sequence
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightTracker"
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/tracker/weight/update:
    put:
      tags:
      - Weight Tracker Resource
      operationId: updateWeightTracker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeightTracker"
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/user/login:
    post:
      tags:
      - User Resource
      operationId: postUserLogin
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - email
              - password
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            encoding:
              password:
                contentType: text/plain
              email:
                contentType: text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/user/logout:
    post:
      tags:
      - User Resource
      operationId: postUserLogout
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/user/read:
    get:
      tags:
      - User Resource
      operationId: readUserInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibreUser"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/user/register:
    post:
      tags:
      - User Resource
      operationId: postUserRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LibreUser"
      responses:
        "200":
          description: OK
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
  /api/user/update:
    post:
      tags:
      - User Resource
      operationId: updateUserInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LibreUser"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibreUser"
        "404":
          description: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/wizard/calculate/{age}/{sex}/{weight}/{height}/{activityLevel}/{weeklyDifference}/{calculationGoal}:
    get:
      tags:
      - Wizard Resource
      operationId: calculateTdee
      parameters:
      - name: activityLevel
        in: path
        required: true
        schema:
          format: float
          type: number
      - name: age
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: calculationGoal
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/CalculationGoal"
      - name: height
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: sex
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/CalculationSex"
      - name: weeklyDifference
        in: path
        required: true
        schema:
          format: float
          type: number
      - name: weight
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WizardResult"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
  /api/wizard/custom/date/{age}/{height}/{weight}/{sex}/{targetDate}/{calculationGoal}:
    get:
      tags:
      - Wizard Resource
      operationId: calculateForTargetDate
      parameters:
      - name: age
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: calculationGoal
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/CalculationGoal"
      - name: height
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: sex
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/CalculationSex"
      - name: targetDate
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: weight
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WizardTargetDateResult"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
  /api/wizard/custom/weight/{age}/{height}/{weight}/{sex}/{targetWeight}:
    get:
      tags:
      - Wizard Resource
      operationId: calculateForTargetWeight
      parameters:
      - name: age
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: height
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: sex
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/CalculationSex"
      - name: targetWeight
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: weight
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WizardTargetWeightResult"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
components:
  schemas:
    BmiCategory:
      enum:
      - UNDERWEIGHT
      - STANDARD_WEIGHT
      - OVERWEIGHT
      - OBESE
      - SEVERELY_OBESE
      type: string
    CalculationGoal:
      enum:
      - GAIN
      - LOSS
      type: string
    CalculationSex:
      enum:
      - MALE
      - FEMALE
      type: string
    CalorieTarget:
      required:
      - added
      - startDate
      - endDate
      - targetCalories
      - maximumCalories
      type: object
      properties:
        userId:
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
          nullable: true
        added:
          $ref: "#/components/schemas/LocalDate"
        sequence:
          format: int64
          type: integer
          nullable: true
        startDate:
          $ref: "#/components/schemas/LocalDate"
        endDate:
          $ref: "#/components/schemas/LocalDate"
        targetCalories:
          format: float
          minimum: 1
          type: number
        maximumCalories:
          format: float
          minimum: 1
          type: number
        updated:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          nullable: true
    CalorieTracker:
      required:
      - added
      - amount
      - category
      type: object
      properties:
        userId:
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
          nullable: true
        added:
          $ref: "#/components/schemas/LocalDate"
        sequence:
          format: int64
          type: integer
          nullable: true
        amount:
          format: float
          minimum: 0
          type: number
        category:
          type: string
        updated:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          nullable: true
        description:
          type: string
          nullable: true
    Dashboard:
      required:
      - userData
      - foodCategories
      type: object
      properties:
        userData:
          $ref: "#/components/schemas/LibreUser"
        foodCategories:
          type: array
          items:
            $ref: "#/components/schemas/FoodCategory"
        calorieTarget:
          type: object
          allOf:
          - $ref: "#/components/schemas/CalorieTarget"
          nullable: true
        caloriesTodayList:
          type: array
          items:
            $ref: "#/components/schemas/CalorieTracker"
          nullable: true
        caloriesWeekList:
          type: array
          items:
            $ref: "#/components/schemas/CalorieTracker"
          nullable: true
        weightTarget:
          type: object
          allOf:
          - $ref: "#/components/schemas/WeightTarget"
          nullable: true
        weightTodayList:
          type: array
          items:
            $ref: "#/components/schemas/WeightTracker"
          nullable: true
        weightMonthList:
          type: array
          items:
            $ref: "#/components/schemas/WeightTracker"
          nullable: true
    ErrorDescription:
      required:
      - field
      - message
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    ErrorResponse:
      required:
      - title
      - errors
      type: object
      properties:
        title:
          type: string
        status:
          format: int32
          type: integer
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorDescription"
    FileUpload:
      type: object
    FoodCategory:
      required:
      - shortvalue
      - longvalue
      type: object
      properties:
        shortvalue:
          type: string
        longvalue:
          type: string
        visible:
          type: boolean
    ImportConfig:
      required:
      - datePattern
      type: object
      properties:
        datePattern:
          type: string
        headerLength:
          format: int32
          type: integer
        drop:
          type: boolean
        updateCalorieTracker:
          type: boolean
        updateWeightTracker:
          type: boolean
    LibreUser:
      required:
      - email
      - password
      - role
      type: object
      properties:
        id:
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
          nullable: true
        email:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        role:
          type: string
        name:
          type: string
          nullable: true
        registered:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          nullable: true
        lastLogin:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          nullable: true
        avatar:
          type: string
          nullable: true
        activated:
          type: boolean
    LocalDate:
      format: date
      type: string
      example: 2022-03-10
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    UUID:
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    WeightTarget:
      required:
      - added
      - startDate
      - endDate
      - initialWeight
      - targetWeight
      type: object
      properties:
        userId:
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
          nullable: true
        added:
          $ref: "#/components/schemas/LocalDate"
        sequence:
          format: int64
          type: integer
          nullable: true
        startDate:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
          nullable: true
        endDate:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
          nullable: true
        initialWeight:
          format: float
          minimum: 0
          type: number
        targetWeight:
          format: float
          minimum: 0
          type: number
        updated:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          nullable: true
    WeightTracker:
      required:
      - added
      type: object
      properties:
        userId:
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
          nullable: true
        added:
          $ref: "#/components/schemas/LocalDate"
        sequence:
          format: int64
          type: integer
          nullable: true
        amount:
          format: float
          minimum: 0
          type: number
        updated:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          nullable: true
    Wizard:
      required:
      - calorieTarget
      - weightTarget
      - weightTracker
      type: object
      properties:
        calorieTarget:
          $ref: "#/components/schemas/CalorieTarget"
        weightTarget:
          $ref: "#/components/schemas/WeightTarget"
        weightTracker:
          $ref: "#/components/schemas/WeightTracker"
    WizardRecommendation:
      enum:
      - HOLD
      - LOSE
      - GAIN
      type: string
    WizardResult:
      required:
      - tdee
      - bmiCategory
      - recommendation
      - durationDays
      - durationDaysUpper
      - durationDaysLower
      type: object
      properties:
        bmr:
          format: float
          type: number
        tdee:
          type: number
        deficit:
          format: float
          type: number
        target:
          format: float
          type: number
        bmi:
          format: float
          type: number
        bmiCategory:
          $ref: "#/components/schemas/BmiCategory"
        recommendation:
          $ref: "#/components/schemas/WizardRecommendation"
        targetBmi:
          format: int32
          type: integer
        targetBmiUpper:
          format: int32
          type: integer
        targetBmiLower:
          format: int32
          type: integer
        targetWeight:
          format: float
          type: number
        targetWeightUpper:
          format: float
          type: number
        targetWeightLower:
          format: float
          type: number
        durationDays:
          type: number
        durationDaysUpper:
          type: number
        durationDaysLower:
          type: number
    WizardTargetDateResult:
      required:
      - resultByRate
      type: object
      properties:
        resultByRate:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/WizardResult"
    WizardTargetWeightResult:
      required:
      - datePerRate
      - targetClassification
      - message
      type: object
      properties:
        datePerRate:
          type: object
          additionalProperties:
            format: date
            type: string
            example: 2022-03-10
        targetClassification:
          $ref: "#/components/schemas/BmiCategory"
        warning:
          type: boolean
        message:
          type: string
